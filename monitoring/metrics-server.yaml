# Metrics Server for Kubernetes cluster resource monitoring
# Provides kubectl top nodes/pods functionality and HPA metrics
# Configured for Talos Linux with TLS verification disabled for kubelets
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metrics-server
  namespace: kube-system
  labels:
    k8s-app: metrics-server
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: monitoring-stack
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:aggregated-metrics-reader
  labels:
    k8s-app: metrics-server
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
    rbac.authorization.k8s.io/aggregate-to-view: "true"
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: monitoring-stack
rules:
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: system:metrics-server
  labels:
    k8s-app: metrics-server
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: monitoring-stack
rules:
- apiGroups: [""]
  resources: ["nodes/metrics"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["pods", "nodes"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: metrics-server-auth-reader
  namespace: kube-system
  labels:
    k8s-app: metrics-server
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: monitoring-stack
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: metrics-server
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metrics-server:system:auth-delegator
  labels:
    k8s-app: metrics-server
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: monitoring-stack
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: metrics-server
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: system:metrics-server
  labels:
    k8s-app: metrics-server
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: monitoring-stack
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:metrics-server
subjects:
- kind: ServiceAccount
  name: metrics-server
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  name: metrics-server
  namespace: kube-system
  labels:
    k8s-app: metrics-server
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: monitoring-stack
spec:
  selector:
    k8s-app: metrics-server
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics-server
  namespace: kube-system
  labels:
    k8s-app: metrics-server
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: monitoring-stack
spec:
  selector:
    matchLabels:
      k8s-app: metrics-server
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      labels:
        k8s-app: metrics-server
        app.kubernetes.io/name: metrics-server
        app.kubernetes.io/component: monitoring
        app.kubernetes.io/part-of: monitoring-stack
    spec:
      serviceAccountName: metrics-server
      priorityClassName: system-cluster-critical
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: tmp-dir
        emptyDir: {}
      containers:
      - name: metrics-server
        image: registry.k8s.io/metrics-server/metrics-server:v0.7.2
        imagePullPolicy: IfNotPresent
        args:
          - --cert-dir=/tmp
          - --secure-port=10250
          - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
          - --kubelet-use-node-status-port
          - --metric-resolution=15s
          - --kubelet-insecure-tls  # Required for Talos Linux
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
          limits:
            cpu: 500m
            memory: 500Mi
        ports:
        - name: https
          containerPort: 10250
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /livez
            port: https
            scheme: HTTPS
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: tmp-dir
          mountPath: /tmp
---
apiVersion: v1
kind: Service
metadata:
  name: metrics-server-api
  namespace: kube-system
  labels:
    k8s-app: metrics-server
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: monitoring-stack
spec:
  selector:
    k8s-app: metrics-server
  ports:
  - name: https
    port: 443
    targetPort: https
  type: ClusterIP
---
# APIService registration for metrics.k8s.io/v1beta1
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1beta1.metrics.k8s.io
  labels:
    k8s-app: metrics-server
    app.kubernetes.io/name: metrics-server
    app.kubernetes.io/component: monitoring
    app.kubernetes.io/part-of: monitoring-stack
spec:
  service:
    name: metrics-server
    namespace: kube-system
  group: metrics.k8s.io
  version: v1beta1
  insecureSkipTLSVerify: true
  groupPriorityMinimum: 100
  versionPriority: 100
